plugins {
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.flywaydb.flyway" version "8.4.2"
    id "io.swagger.core.v3.swagger-gradle-plugin" version "2.2.20"
}

flyway {
    url = 'jdbc:postgresql://localhost:5433/grocery1'
    user = 'grocery1'
    password = 'postgres'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.postgresql:postgresql'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    implementation 'io.swagger.core.v3:swagger-annotations:2.1.9'
    implementation 'org.postgresql:postgresql:42.7.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.4.2")
    testImplementation("com.squareup.okhttp3:mockwebserver:4.0.0")
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation("com.h2database:h2")
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'

    components {
        withModule('org.springframework:spring-beans') {
            allVariants {
                withDependencyConstraints {
                    // Need to patch constraints because snakeyaml is an optional dependency
                    it.findAll { it.name == 'snakeyaml' }.each { it.version { strictly '1.31' } }
                }
            }
        }
    }
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}

bootJar {
    manifest {
        attributes "Implementation-Title": "Gradle"
       // attributes "Booking-Implementation-Version": version
    }
}

bootRun {
    args = ["--spring.profiles.active=local"]
}

tasks.withType(Test) {
    testLogging {
        events "standardOut", "started", "passed", "skipped", "failed"
    }
}